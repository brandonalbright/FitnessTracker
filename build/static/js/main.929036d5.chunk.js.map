{"version":3,"sources":["components/Header.js","api/index.js","components/Activities.js","components/Routines.js","components/RoutineModals.js","components/AddActivities.js","components/MyRoutines.js","components/Login.js","index.js"],"names":["Header","props","loggedIn","setLoggedIn","getToken","clearToken","username","active","setActive","className","onClick","event","preventDefault","to","BASE_URL","localStorage","getItem","removeItem","setToken","token","setItem","buildHeaders","base","hitAPI","method","endpoint","bodyObj","a","payload","headers","body","JSON","stringify","fetch","response","json","data","Activities","activitiesList","setActivitiesList","useState","showModal","setShowModal","name","setName","description","setDescription","clearForm","document","querySelector","style","overflow","map","activity","Card","key","id","onSubmit","nameCheck","i","length","checkDuplicate","then","type","placeholder","value","onChange","target","required","rows","disabled","Routines","routinesList","setRoutinesList","routine","creatorName","goal","activities","duration","count","Modals","ID","setID","showDelete","setShowDelete","setGoal","myRoutines","err","setErr","listLength","tempList","filter","slice","isPublic","catch","console","error","splice","AddActivities","routineid","setShowAdd","updateActivities","setUpdateActivities","setCount","setDuration","addActivityid","setAddActivityid","activityEdit","setActivityEdit","indx","valuename","duraction","activityId","MyRoutines","setMyRoutines","showBack","setShowBack","showAdd","useEffect","sort","b","Accordion","AccordionSummary","expandIcon","Typography","AccordionDetails","routineActivityId","Login","setUsername","loginName","setLoginName","loginPassword","setLoginPassword","loginError","setLoginError","password","result","user","log","App","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.929036d5.chunk.js","sourcesContent":["import React  from 'react'\nimport {Link} from 'react-router-dom'\nimport './header.css'\n\nfunction Header(props) {\n    const {loggedIn, \n           setLoggedIn,  \n           getToken,\n           clearToken,\n           username,\n           active,\n           setActive\n           }= props;\n    \n\n\n    return (\n        <div className='nav'>\n            <h1>Fitness Tracker</h1>\n            {(getToken())\n                ?   <>\n                    <h3>Hello, {username}!</h3>\n                    <button\n                    onClick= {(event)=> {\n                        event.preventDefault()\n                        setLoggedIn(false);\n                        clearToken();\n                    }}>Log Out</button>\n                    </>\n                : null }\n            \n            <nav className='nav-items'>\n                \n                {loggedIn? null\n                : <Link to=\"/\" className='nav-link'>\n                    <span\n                        onClick={()=> setActive('login')}\n                    >{(active === 'login')? <strong>Login/Register</strong>: 'Login/Register'}</span>\n                </Link>}\n                <Link to=\"/routines\" className='nav-link'>\n                    <span\n                        onClick={()=> setActive('routines')}\n                    >{(active === 'routines')? <strong>Routines</strong>: 'Routines'}</span>\n                </Link>\n                <Link to=\"/activities\" className='nav-link'>\n                    <span\n                        onClick={()=> setActive('activities')}\n                    >{(active === 'activities')? <strong>Activities</strong>: 'Activities'}</span>\n                </Link>\n                {loggedIn?\n                    <Link to=\"/myroutines\" className='nav-link'>\n                        <span\n                            onClick={()=> setActive('myroutines')}\n                    >{(active === 'myroutines')? <strong>My Routines</strong>: 'My Routines'}</span>\n                    </Link>\n                    : null \n                    }\n            </nav>\n        </div>\n    )\n}\n\nexport default Header","const BASE_URL = 'https://fitnesstrac-kr.herokuapp.com/api/'\n\nexport const getToken = () => {\n  if (localStorage.getItem('authfitness-token')) {\n    return localStorage.getItem('authfitness-token')\n  } else {\n    localStorage.removeItem('authfitness-token')\n  }\n}\n\nexport const clearToken = () => {\n  localStorage.removeItem('authfitness-token');\n  localStorage.removeItem('username')\n}\n\nconst setToken = (token, username) => {\n  localStorage.setItem('authfitness-token', token);\n  localStorage.setItem('username', username)\n}\n\nfunction buildHeaders() {\n  let base = {\n    'Content-Type': 'application/json'\n  }\n\n  if (getToken()) {\n    base['Authorization'] = `Bearer ${getToken()}`\n  }\n\n  return base\n}\n\nexport const auth = async (username, password, isNew = false) => {\n  const url = `${BASE_URL}/users` + (isNew ? '/register' : '/login')\n\n  const response = await fetch(url, {\n    method: 'POST',\n    headers: buildHeaders(),\n    body: JSON.stringify({\n      user: {\n        username: username,\n        password: password,\n      },\n    }),\n  })\n\n  const { error, data } = await response.json()\n\n  if (error) {\n    throw Error(error.message)\n  }\n\n  if (data && data.token) {\n    setToken(data.token)\n  }\n  console.log(data)\n  return data\n};\n\nexport const hitAPI = async (method, endpoint, bodyObj) => {\n  const payload = {\n    method: method,\n    headers: buildHeaders(),\n  };\n  \n  if (bodyObj) {\n    payload.body = JSON.stringify(bodyObj);\n  }\n  const response = await fetch(`${BASE_URL}${endpoint}`, payload)\n  \n  const data = await response.json()\n\n  // if (error) {\n  //   throw Error(error.message)\n  // }\n\n  if (data && data.token) {\n    setToken(data.token)\n  }\n  return data\n}","import { Card } from \"@material-ui/core\";\nimport React, {useState} from \"react\";\nimport {getToken, hitAPI} from \"../api/index\";\n// import \"./activities.css\";\n\nconst Activities = (props) => {\n  const {activitiesList, setActivitiesList} = props;\n  const [showModal, setShowModal] = useState(false);\n  const [name, setName] = useState('');\n  const [description, setDescription] = useState('');\n  const [active, setActive] = useState(false);\n\n  \n\n  function clearForm() {\n    setName('');\n    setDescription('');\n  };\n\n  function checkDuplicate() {\n    let nameCheck;\n    for (let i = 0; i < activitiesList.length; i++) {\n      nameCheck = activitiesList[i].name;\n      if (name === nameCheck) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function checkDisabled() {\n    if (name === '' || description === '') {\n      return true;\n    }\n    return false;\n  }\n\n  if (showModal) {\n    document.querySelector('body').style.overflow = 'hidden';\n  } else {\n    document.querySelector('body').style.overflow = 'visible';\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"header\">\n        <h1>Activities</h1>\n        {getToken() ? (\n            <button className=\"modal-button\" onClick={() => {\n              setShowModal(true);\n            }}>New Activity</button>\n          ) : null}\n      </div>\n      <div className=\"list\">\n        {activitiesList.map((activity) => {\n          return (\n          <Card className=\"card\" key={activity.id} >\n            <div className=\"card-header\">\n              <h2 className=\"activity-name\">{activity.name}</h2>\n            </div>\n            <div className=\"card-body\">\n              <p className=\"activity-desc\">{activity.description}</p>\n            </div>\n          </Card>\n        );})}\n      </div>\n      {showModal ? (\n        <div className=\"modal\">\n          <div className=\"contents\">\n            <label>Add A New Activity</label>\n            <form className=\"new-form\" onSubmit={(event) => {\n              event.preventDefault();\n\n              const data = {\n                name,\n                description\n              };\n\n              if (checkDuplicate()) {\n                setActive(true);\n              } else {\n                hitAPI(\"POST\", \"/activities\", data)\n                .then((data) => {\n                  setActivitiesList([data, ...activitiesList]);\n                  clearForm();\n                  setShowModal(false);\n                });\n              }\n            }}>\n              <div>\n                <input type=\"text\" placeholder=\"name of activity\"\n                  value={name}\n                  onChange={(event) => {\n                    setActive(false);\n                    setName(event.target.value);\n                  }} required />\n                <h5>required field</h5>\n              </div>\n              <div>\n                <textarea placeholder=\"description\" rows=\"4\"\n                  value={description}\n                  onChange={(event) => setDescription(event.target.value)} required />\n                <h5>required field</h5>\n              </div>\n              {active ? (\n                <h5 className=\"duplicate\">\"{name}\" already exists</h5>\n              ) : <h5>&nbsp;</h5>}\n              <div className=\"buttons\">\n                <button className=\"cancel-button\"\n                  onClick={() => {\n                    setActive(false);\n                    clearForm();\n                    setShowModal(false);\n                  }}>Cancel</button>\n                <button className=\"add-button\"\n                  disabled={checkDisabled()}>Add Activity!</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      ) : null}\n    </div>\n  )\n}\n\nexport default Activities;","import { Card } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./routines.css\";\n\nconst Routines = ({routinesList, setRoutinesList}) => {\n\n    return (\n        <>\n            <div className=\"routines-page\">\n            <h1>View Public Routines...</h1>\n            <br></br>\n            {routinesList.map((routine) => {\n                return (\n                    <Card className=\"routine-card\" key={routine.id}>\n                        <h2 className=\"routine-header\">{routine.creatorName}'s {routine.name}</h2>\n                        <p className=\"routine-goal\">Routine Goal: {routine.goal}</p>\n                        {routine.activities ? (\n                          routine.activities.map((activity) => {\n                            return <div key={activity.id}>\n                            <p className=\"activity-name\">Activity: {activity.name}</p>\n                            <p className=\"activity-description\">Description: {activity.description}</p>\n                            <p className=\"activity-duration\">Duration: {activity.duration}</p>\n                            <p className=\"activity-count\">Count: {activity.count}</p>\n                            </div>\n                        })\n                        ) : null }\n                        \n                        \n                    </Card>\n                );\n            })}\n            </div>\n            \n            \n        </>\n    )\n\n\n}\n\nexport default Routines;\n","import React, {useState} from \"react\";\nimport {hitAPI} from \"../api/index\";\n\nconst Modals = ({\n  ID,\n  setID,\n  routinesList,\n  setRoutinesList,\n  showModal,\n  setShowModal,\n  showDelete,\n  setShowDelete,\n  name,\n  goal,\n  setName,\n  setGoal,\n  myRoutines\n}) => {\n  const [err, setErr] = useState(false);\n\n  function checkDuplicate() {\n    let listLength;\n    let tempList;\n    if (ID) {\n      tempList = routinesList.filter(routine => routine.id !== ID);\n      listLength = tempList.length;\n    } else {\n      tempList = routinesList.slice();\n      listLength = tempList.length;\n    }\n    for (let i = 0; i < listLength; i++) {\n      if (name === tempList[i].name) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  function clearForm() {\n    setName('');\n    setGoal('');\n    setID(null);\n  };\n\n  function checkDisabled() {\n    if (name === '' || goal === '') {\n      return true;\n    }\n    return false;\n  }\n\n  if (showModal) {\n    document.querySelector('body').style.overflow = 'hidden';\n  } else {\n    document.querySelector('body').style.overflow = 'visible';\n  };\n\n  return (\n    <>\n    {/* Modal to add or edit routine */}\n    {showModal ? (\n      <div className=\"modal\">\n        <div className=\"contents\">\n          {ID ? (\n            <label>Edit Routine</label>\n          ) : (\n            <label>Add A New Routine</label>\n          )}\n          <form className=\"new-form\" onSubmit={async (event) => {\n            event.preventDefault();\n\n            const data = {\n              name,\n              goal,\n              isPublic: true\n            };\n\n            if (checkDuplicate()) {\n              setErr(true);\n            } else {\n              if (ID) {\n                hitAPI(\"PATCH\", `/routines/${ID}`, data)\n                .then((data) => {\n                  setRoutinesList([...routinesList, data]);\n                })\n                .catch(console.error);\n              } else {\n                hitAPI(\"POST\", \"/routines\", data)\n                .then((data) => {\n                  setRoutinesList([...routinesList, data]);\n                })\n                .catch(console.error);\n              };\n              clearForm();\n              setShowModal(false);\n            }\n          }}>\n            <div>\n              <input type=\"text\" placeholder=\"name of routine\"\n                value={name}\n                onChange={(event) => {\n                  setErr(false);\n                  setName(event.target.value);\n                }} required />\n              <h5>required field</h5>\n            </div>\n            <div>\n              <textarea placeholder=\"goal\" rows=\"4\"\n                value={goal}\n                onChange={(event) => setGoal(event.target.value)} required />\n              <h5>required field</h5>\n            </div>\n            {err ? (\n              <h5 className=\"duplicate\">\"{name}\" already exists as a routine.</h5>\n            ) : <h5>&nbsp;</h5>}\n            <div className=\"buttons\">\n              <button className=\"cancel-button\"\n                onClick={() => {\n                  setErr(false);\n                  clearForm();\n                  setShowModal(false);\n                }}>Cancel</button>\n              <button className=\"add-button\"\n                disabled={checkDisabled()}>{ID ? \"Edit\" : \"Add\"} Routine!</button>\n            </div>\n          </form>\n        </div>\n      </div>\n    ) : null}\n    \n    {/*modal to confirm deletion of routine*/}\n    {showDelete ? (\n      <div className=\"modal delete-modal\">\n        <div className=\"confirm-delete\">\n          <p>Delete this routine?</p>\n          <button className=\"yes\"\n            onClick={() => {\n              for (let i = 0; i < myRoutines.length; i++) {\n                if (myRoutines[i].id === ID) {\n                  hitAPI(\"DELETE\", `/routines/${ID}`)\n                    .then(() => {\n                      setRoutinesList([routinesList.splice(i, 1)]);\n                    })\n                    .catch(console.error);\n                  \n                    break;\n                }\n              }\n              setShowDelete(false);\n              setID(null);\n            }}>Yes</button>\n          <button className=\"no\"\n            onClick={() => {\n              setShowDelete(false);\n            }}>No</button>\n        </div>\n      </div>\n    ) : null}\n    </>\n  )\n}\n\nexport default Modals;","import React from 'react'\nimport {hitAPI} from \"../api/index\";\n\nfunction AddActivities(props) {\n    const {activitiesList, \n            routineid, \n            setShowAdd, \n            updateActivities, \n            setUpdateActivities,\n            count,\n            setCount,\n            duration,\n            setDuration,\n            addActivityid,\n            setAddActivityid,\n            activityEdit,\n            setActivityEdit} = props;\n    \n    \n\n    return (\n    <form>\n        {activityEdit? \n        null\n        :\n        <select\n            onChange={(event)=> {\n                setAddActivityid(event.target.value)\n                }}>\n            {activitiesList.map((activity, indx) => {\n            return <option \n                    value={activity.id}\n                    valuename={activity.name}\n                    key={indx}\n                    >\n                    {activity.name}</option>\n            })}\n        </select>\n        }\n        <div className=\"count-duration\">\n            <input \n                type=\"text\" \n                placeholder=\"Count\"\n                value={count}\n                onChange={(event)=> {\n                    setCount(event.target.value)\n                }}>\n            </input>\n            <input \n                type=\"text\" \n                placeholder=\"Duration\"\n                value={duration}\n                onChange={(event)=> {\n                    setDuration(event.target.value)\n                }}>\n            </input>\n        </div>\n        <button\n            onClick={(event)=> {\n                event.preventDefault();\n                (activityEdit)?\n                (hitAPI(\"PATCH\", `/routine_activities/${addActivityid}`, {count: count, duraction: duration})\n                .then(() => {\n                    setShowAdd(false)\n                    setActivityEdit(false)\n                    setUpdateActivities(!updateActivities)\n                    setAddActivityid('')\n                    setCount('')\n                    setDuration('')\n                }))\n                :\n                hitAPI(\"POST\", `/routines/${routineid}/activities`, {\n                    activityId: addActivityid,\n                    count: count, \n                    duration: duration})\n                .then(() => {\n                    setShowAdd(false)\n                    setUpdateActivities(!updateActivities)\n                });\n            }}>{activityEdit? \"EDIT\": \"ADD\"}</button>\n    </form>)\n}\n\nexport default AddActivities","import { Card } from \"@material-ui/core\";\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport React, {useState, useEffect} from \"react\";\nimport {getToken, hitAPI} from \"../api/index\";\nimport Modals from \"./RoutineModals\";\nimport \"./myRoutines.css\";\nimport AddActivities from \"./AddActivities\"\n\nconst MyRoutines = ({\n  setActive,\n  routinesList,\n  setRoutinesList,\n  username,\n  activitiesList,\n  updateActivities,\n  setUpdateActivities}) => {\n  const [showModal, setShowModal] = useState(false);\n  const [myRoutines, setMyRoutines] = useState([])\n  const [name, setName] = useState('');\n  const [goal, setGoal] = useState('');\n  const [showBack, setShowBack] = useState(false);\n  const [showDelete, setShowDelete] = useState(false);\n  const [showAdd, setShowAdd] = useState(false);\n  const [ID, setID] = useState(null);\n  const [count, setCount] = useState('');\n  const [duration, setDuration] = useState('');\n  const [addActivityid, setAddActivityid] = useState('315');\n  const [activityEdit, setActivityEdit] = useState(false)\n  setActive('myroutines');\n\n  useEffect(() => {\n    hitAPI(\"GET\", `/users/${username}/routines`)\n      .then((data) => {\n        setMyRoutines(data.sort((a, b) => (a.name > b.name) ? 1 : -1));\n      })\n      .catch(console.error);\n  }, [routinesList, username]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"header\">\n        <h1>My Routines</h1>\n        {getToken() ? (\n              <button className=\"modal-button\" onClick={() => {\n                setShowModal(true);\n              }}>New Routine</button>\n            ) : null}\n      </div>\n      <div className=\"list\">\n        {myRoutines.map((routine) => {\n          return (\n            <Card className=\"card myroutines\" key={routine.id}>\n              <div className=\"card-header\">\n                <h2 className=\"myroutine-name\">{routine.name} {((ID === routine.id) && showBack) ? \"Activities\" : routine.id}</h2>\n              </div>\n              <div className=\"card-body\">\n              {ID === routine.id && showBack && showAdd? \n                <AddActivities \n                  activitiesList={activitiesList} \n                  routineid={routine.id} \n                  setShowAdd={setShowAdd} \n                  setUpdateActivities={setUpdateActivities} \n                  updateActivities={updateActivities}\n                  count={count}\n                  setCount={setCount}\n                  duration={duration}\n                  setDuration={setDuration}\n                  addActivityid={addActivityid}\n                  setAddActivityid={setAddActivityid}\n                  activityEdit={activityEdit}\n                  setActivityEdit={setActivityEdit}/> \n                  : null}\n                {ID === routine.id && showBack ? (\n                  routine.activities <1? <p>No activities, press \"Add\" to add activities to your routine.</p>\n                  :\n                  routine.activities.map((activity) => {\n                    \n                    return (\n                      <Accordion className=\"myroutine-activity\" key={activity.id}>\n                        <AccordionSummary\n                          expandIcon={<ExpandMoreIcon />}\n                          // aria-controls={`${activity.name}-content`}\n                          // id={`${activity.name}-header`}\n                        >\n                          <Typography className=\"myactivity-name\">{activity.name}</Typography>\n                          <Typography className=\"myactivity-count\">Reps: {activity.count}</Typography>\n                          <Typography className=\"myactivity-duration\">Duration: {activity.duration} minutes</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                          <Typography className=\"myactivity-goal\">{activity.description}</Typography>\n                          <DeleteIcon \n                            onClick={() => {\n                              \n                              hitAPI(\"DELETE\", `/routine_activities/${activity.routineActivityId}`)\n                                .then((data) => {\n                                  setUpdateActivities(!updateActivities)\n                                })\n                                .catch(console.error);\n                            }}/>\n                          <EditIcon \n                            onClick={() => {\n                              setShowAdd(true)\n                              setActivityEdit(true)\n                              setAddActivityid(activity.routineActivityId)\n                              setCount(activity.count)\n                              setDuration(activity.duration)\n                            }}/>\n                        </AccordionDetails>\n                      </Accordion>\n                    )\n                  })\n                  )\n                  : (\n                  <p className=\"myroutine-goal\">Goal: {routine.goal}</p>\n                  )\n                }\n              </div>\n              <div className=\"card-footer\">\n                <button className=\"flip\"\n                  onClick={() => {\n                    setShowBack(!showBack);\n                    setID(routine.id);\n                  }}>{((ID === routine.id) && showBack ? \"Goal\" : \"Activities\")}</button>\n                <button className=\"edit\"\n                  onClick={((ID === routine.id) && showBack) ? (\n                    () => {\n                      setID(routine.id);\n                      setShowAdd(!showAdd)\n\n                    }\n                    ) : (\n                    () => {\n                      setID(routine.id);\n                      setName(routine.name);\n                      setGoal(routine.goal);\n                      setShowModal(true);\n                    }\n                  )}>{((ID === routine.id) && showBack ? \"Add\" : \"Edit\")}</button>\n                <button className=\"delete\"\n                  onClick={() => {\n                    setID(routine.id)\n                    setShowDelete(true);\n                  }}>Delete</button>\n              </div>\n            </Card>\n          )\n        })}\n      </div>\n      <Modals\n        ID={ID}\n        setID={setID}\n        routinesList={routinesList}\n        setRoutinesList={setRoutinesList}\n        myRoutines={myRoutines}\n        showModal={showModal}\n        setShowModal={setShowModal}\n        showDelete={showDelete}\n        setShowDelete={setShowDelete}\n        name={name}\n        goal={goal}\n        setName={setName}\n        setGoal={setGoal} />\n    </div>\n  );\n}\n\nexport default MyRoutines;","import React, { useState } from 'react'\nimport './Login.css'\n\nfunction Login(props){\n    const {loggedIn,\n        setLoggedIn,\n        setToken,\n        setUsername,\n        setShowModal,\n        setActive} = props;\n    \n    const [loginName, setLoginName] = useState('')\n    const [loginPassword, setLoginPassword] = useState('')\n    const [loginError, setLoginError] = useState('')\n\n    setActive('login')\n\n\n    return (\n    <div className=\"login-form\">\n    {loggedIn? null :\n      <form className=\"login-form\">\n          <h2 className=\"title\">Login or Register</h2>\n          {loginError?\n          <h3 className=\"error\">{loginError}</h3>\n          : null}\n          <div className=\"login-inputs\">\n              <input className=\"loginName\"\n                  type=\"text\" \n                  placeholder=\"loginName\" \n                  value={loginName}\n                  onChange={(event) => setLoginName(event.target.value)}></input>\n              <input className=\"loginPassword\"\n                  id=\"passwordInput\"\n                  type=\"password\"\n                  placeholder=\"loginPassword\" \n                  value={loginPassword}\n                  onChange={(event) => setLoginPassword(event.target.value)}></input>\n          </div>\n          <div className=\"buttons\">\n              <button\n                  onClick={(event) => {\n                      event.preventDefault()\n                      \n                      \n                      fetch('https://fitnesstrac-kr.herokuapp.com/api/users/login', {\n                      method: \"POST\",\n                      headers: {\n                          'Content-Type': 'application/json'},\n                      body: JSON.stringify({\n                          username: loginName,\n                          password: loginPassword\n                      })\n                      })\n                      .then(response => response.json())\n                      .then(result => {\n                          if (result.error) {\n                              setLoginError(result.error)\n                          }\n                          setToken(result.token, result.user.username)\n                          setLoggedIn(true)\n                          setUsername(result.user.username)\n                          setLoginName('')\n                          setLoginPassword('')\n                          setLoginError('')\n                      })\n                      .catch(error => console.log(error));\n                      \n                  }}>Login</button>\n          \n              <button\n              onClick={(event) => {\n                  event.preventDefault()\n                  \n                  fetch('https://fitnesstrac-kr.herokuapp.com/api/users/register', {\n                  method: \"POST\",\n                  headers: {\n                      'Content-Type': 'application/json'},\n                  body: JSON.stringify({\n                      username: loginName,\n                      password: loginPassword\n                  })\n                  })\n                  .then(response => response.json())\n                  .then(result => {\n                      if (result.error) {\n                          setLoginError(result.error)\n                      }\n                      setToken(result.token, result.user.username)\n                      setLoggedIn(true)\n                      setUsername(result.user.username)\n                      setShowModal(false)\n                      setLoginName('')\n                      setLoginPassword('')\n                      setLoginError('')\n                  })\n                  .catch(error => console.log(error))}}>Register</button>\n          </div>    \n      </form>\n    }\n    </div>\n  )\n}\n\nexport default Login","import React, {useState, useEffect} from  \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport Header from './components/Header'\nimport Activities from \"./components/Activities\";\nimport Routines from './components/Routines';\nimport MyRoutines from './components/MyRoutines';\nimport Login from './components/Login';\nimport {hitAPI} from './api';\nimport \"./components/activities_myRoutines.css\"\n\n\nfunction App() {\n    const [routinesList, setRoutinesList] = useState([]);\n    const [activitiesList, setActivitiesList] = useState([]);\n    const [loggedIn, setLoggedIn] = useState(false);\n    const [username, setUsername] = useState('');\n    const [active, setActive] = useState('login');\n    const [updateActivities, setUpdateActivities] = useState(false)\n    \n    useEffect(() => {\n      hitAPI(\"GET\", \"/routines\")\n          .then((data) => {\n              setRoutinesList(data);\n          })\n          .catch((error) => {\n              console.error(\"There was a problem getting your routines\", error);\n          })\n  }, [updateActivities]);\n\n    useEffect(() => {\n        hitAPI(\"GET\", \"/activities\")\n        .then((data) => {\n            setActivitiesList(data.sort((a, b) => (a.id < b.id) ? 1 : -1));\n        })\n        .catch(console.error);\n    }, []);\n\n    const getToken = () => {\n        if (localStorage.getItem('authfitness-token')) {\n            setLoggedIn(true)\n            setUsername(localStorage.getItem('username'))\n          return localStorage.getItem('authfitness-token')\n        } else {\n          localStorage.removeItem('authfitness-token')\n        }\n      }\n\n    const clearToken = () => {\n        localStorage.removeItem('authfitness-token');\n        localStorage.removeItem('username')\n      }\n      \n    const setToken = (token, username) => {\n        localStorage.setItem('authfitness-token', token);\n        localStorage.setItem('username', username)\n      }\n\n    \n    return (\n        <>\n            <Router>\n                <div className=\"app\">\n                    <Header \n                        loggedIn={loggedIn}\n                        setLoggedIn={setLoggedIn}\n                        getToken={getToken}\n                        clearToken={clearToken}\n                        username={username}\n                        active={active}\n                        setActive={setActive}/>\n                    <Switch>\n                        <Route path=\"/activities\">\n                            {/* activities page */}\n                            <Activities\n                              getToken={getToken}\n                              routinesList={routinesList}\n                              setRoutinesList={setRoutinesList}\n                              activitiesList={activitiesList} />\n                        </Route>\n                        <Route path=\"/routines\">\n                            {/* routines page */}\n                            <Routines\n                              routinesList={routinesList}\n                              setRoutinesList={setRoutinesList} />\n                        </Route>\n                        <Route path=\"/myroutines\">\n                            {/* myroutines page */}\n                            {loggedIn === false?\n                            <Redirect to=\"/\" />\n                            :\n                            <MyRoutines\n                              getToken={getToken} \n                              setActive={setActive}\n                              routinesList={routinesList}\n                              setRoutinesList={setRoutinesList}\n                              username={username} \n                              activitiesList={activitiesList}\n                              updateActivities={updateActivities}\n                              setUpdateActivities={setUpdateActivities}/>\n                            }\n                            \n                        </Route>\n                        <Route path=\"/\">\n                            {/* homepage */}\n                            {loggedIn?\n                            <Redirect to=\"/myroutines\" />\n                            :\n                            <Login \n                                loggedIn={loggedIn}\n                                setLoggedIn={setLoggedIn}\n                                clearToken={clearToken}\n                                setToken={setToken}\n                                setUsername={setUsername}\n                                setActive={setActive}\n                            />}\n                        </Route>\n                    </Switch>\n                </div>\n            </Router>\n        </>\n    )\n}\n\nReactDOM.render(\n    <App />,\n    document.getElementById(`app`)\n);\n"],"sourceRoot":""}