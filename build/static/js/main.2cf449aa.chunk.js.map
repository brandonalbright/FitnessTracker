{"version":3,"sources":["components/Header.js","api/index.js","components/Activities.js","components/Routines.js","components/RoutineModals.js","components/AddActivities.js","components/MyRoutines.js","components/Login.js","index.js"],"names":["Header","props","loggedIn","setLoggedIn","getToken","clearToken","username","active","setActive","className","onClick","event","preventDefault","to","BASE_URL","localStorage","getItem","removeItem","setToken","token","setItem","buildHeaders","base","hitAPI","method","endpoint","bodyObj","a","payload","headers","body","JSON","stringify","fetch","response","json","data","Activities","activitiesList","setActivitiesList","useState","showModal","setShowModal","name","setName","description","setDescription","clearForm","document","querySelector","style","overflow","map","activity","Card","key","id","onSubmit","nameCheck","i","length","checkDuplicate","then","type","placeholder","value","onChange","target","required","rows","disabled","Routines","routinesList","setRoutinesList","routine","creatorName","goal","activities","duration","count","Modals","ID","setID","showDelete","setShowDelete","setGoal","myRoutines","err","setErr","listLength","tempList","filter","slice","isPublic","catch","console","error","splice","AddActivities","routineid","setShowAdd","updateActivities","setUpdateActivities","setCount","setDuration","addActivityid","setAddActivityid","activityEdit","setActivityEdit","indx","valuename","duraction","activityId","MyRoutines","setMyRoutines","showBack","setShowBack","showAdd","useEffect","sort","b","Accordion","AccordionSummary","expandIcon","Typography","AccordionDetails","routineActivityId","Login","setUsername","loginName","setLoginName","loginPassword","setLoginPassword","loginError","setLoginError","password","result","user","log","App","path","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2cf449aa.chunk.js","sourcesContent":["import React  from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport './header.css'\r\n\r\nfunction Header(props) {\r\n    const {loggedIn, \r\n           setLoggedIn,  \r\n           getToken,\r\n           clearToken,\r\n           username,\r\n           active,\r\n           setActive\r\n           }= props;\r\n    \r\n\r\n\r\n    return (\r\n        <div className='nav'>\r\n            <h1>Fitness Tracker</h1>\r\n            {(getToken())\r\n                ?   <>\r\n                    <h3>Hello, {username}!</h3>\r\n                    <button\r\n                    onClick= {(event)=> {\r\n                        event.preventDefault()\r\n                        setLoggedIn(false);\r\n                        clearToken();\r\n                    }}>Log Out</button>\r\n                    </>\r\n                : null }\r\n            \r\n            <nav className='nav-items'>\r\n                \r\n                {loggedIn? null\r\n                : <Link to=\"/\" className='nav-link'>\r\n                    <span\r\n                        onClick={()=> setActive('login')}\r\n                    >{(active === 'login')? <strong>Login/Register</strong>: 'Login/Register'}</span>\r\n                </Link>}\r\n                <Link to=\"/routines\" className='nav-link'>\r\n                    <span\r\n                        onClick={()=> setActive('routines')}\r\n                    >{(active === 'routines')? <strong>Routines</strong>: 'Routines'}</span>\r\n                </Link>\r\n                <Link to=\"/activities\" className='nav-link'>\r\n                    <span\r\n                        onClick={()=> setActive('activities')}\r\n                    >{(active === 'activities')? <strong>Activities</strong>: 'Activities'}</span>\r\n                </Link>\r\n                {loggedIn?\r\n                    <Link to=\"/myroutines\" className='nav-link'>\r\n                        <span\r\n                            onClick={()=> setActive('myroutines')}\r\n                    >{(active === 'myroutines')? <strong>My Routines</strong>: 'My Routines'}</span>\r\n                    </Link>\r\n                    : null \r\n                    }\r\n            </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header","const BASE_URL = 'https://fitnesstrac-kr.herokuapp.com/api/'\r\n\r\nexport const getToken = () => {\r\n  if (localStorage.getItem('authfitness-token')) {\r\n    return localStorage.getItem('authfitness-token')\r\n  } else {\r\n    localStorage.removeItem('authfitness-token')\r\n  }\r\n}\r\n\r\nexport const clearToken = () => {\r\n  localStorage.removeItem('authfitness-token');\r\n  localStorage.removeItem('username')\r\n}\r\n\r\nconst setToken = (token, username) => {\r\n  localStorage.setItem('authfitness-token', token);\r\n  localStorage.setItem('username', username)\r\n}\r\n\r\nfunction buildHeaders() {\r\n  let base = {\r\n    'Content-Type': 'application/json'\r\n  }\r\n\r\n  if (getToken()) {\r\n    base['Authorization'] = `Bearer ${getToken()}`\r\n  }\r\n\r\n  return base\r\n}\r\n\r\nexport const auth = async (username, password, isNew = false) => {\r\n  const url = `${BASE_URL}/users` + (isNew ? '/register' : '/login')\r\n\r\n  const response = await fetch(url, {\r\n    method: 'POST',\r\n    headers: buildHeaders(),\r\n    body: JSON.stringify({\r\n      user: {\r\n        username: username,\r\n        password: password,\r\n      },\r\n    }),\r\n  })\r\n\r\n  const { error, data } = await response.json()\r\n\r\n  if (error) {\r\n    throw Error(error.message)\r\n  }\r\n\r\n  if (data && data.token) {\r\n    setToken(data.token)\r\n  }\r\n  console.log(data)\r\n  return data\r\n};\r\n\r\nexport const hitAPI = async (method, endpoint, bodyObj) => {\r\n  const payload = {\r\n    method: method,\r\n    headers: buildHeaders(),\r\n  };\r\n  \r\n  if (bodyObj) {\r\n    payload.body = JSON.stringify(bodyObj);\r\n  }\r\n  const response = await fetch(`${BASE_URL}${endpoint}`, payload)\r\n  \r\n  const data = await response.json()\r\n\r\n  // if (error) {\r\n  //   throw Error(error.message)\r\n  // }\r\n\r\n  if (data && data.token) {\r\n    setToken(data.token)\r\n  }\r\n  return data\r\n}","import { Card } from \"@material-ui/core\";\r\nimport React, {useState} from \"react\";\r\nimport {getToken, hitAPI} from \"../api/index\";\r\n// import \"./activities.css\";\r\n\r\nconst Activities = (props) => {\r\n  const {activitiesList, setActivitiesList} = props;\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [name, setName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n  const [active, setActive] = useState(false);\r\n\r\n  \r\n\r\n  function clearForm() {\r\n    setName('');\r\n    setDescription('');\r\n  };\r\n\r\n  function checkDuplicate() {\r\n    let nameCheck;\r\n    for (let i = 0; i < activitiesList.length; i++) {\r\n      nameCheck = activitiesList[i].name;\r\n      if (name === nameCheck) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function checkDisabled() {\r\n    if (name === '' || description === '') {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  if (showModal) {\r\n    document.querySelector('body').style.overflow = 'hidden';\r\n  } else {\r\n    document.querySelector('body').style.overflow = 'visible';\r\n  };\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"header\">\r\n        <h1>Activities</h1>\r\n        {getToken() ? (\r\n            <button className=\"modal-button\" onClick={() => {\r\n              setShowModal(true);\r\n            }}>New Activity</button>\r\n          ) : null}\r\n      </div>\r\n      <div className=\"list\">\r\n        {activitiesList.map((activity) => {\r\n          return (\r\n          <Card className=\"card\" key={activity.id} >\r\n            <div className=\"card-header\">\r\n              <h2 className=\"activity-name\">{activity.name}</h2>\r\n            </div>\r\n            <div className=\"card-body\">\r\n              <p className=\"activity-desc\">{activity.description}</p>\r\n            </div>\r\n          </Card>\r\n        );})}\r\n      </div>\r\n      {showModal ? (\r\n        <div className=\"modal\">\r\n          <div className=\"contents\">\r\n            <label>Add A New Activity</label>\r\n            <form className=\"new-form\" onSubmit={(event) => {\r\n              event.preventDefault();\r\n\r\n              const data = {\r\n                name,\r\n                description\r\n              };\r\n\r\n              if (checkDuplicate()) {\r\n                setActive(true);\r\n              } else {\r\n                hitAPI(\"POST\", \"/activities\", data)\r\n                .then((data) => {\r\n                  setActivitiesList([data, ...activitiesList]);\r\n                  clearForm();\r\n                  setShowModal(false);\r\n                });\r\n              }\r\n            }}>\r\n              <div>\r\n                <input type=\"text\" placeholder=\"name of activity\"\r\n                  value={name}\r\n                  onChange={(event) => {\r\n                    setActive(false);\r\n                    setName(event.target.value);\r\n                  }} required />\r\n                <h5>required field</h5>\r\n              </div>\r\n              <div>\r\n                <textarea placeholder=\"description\" rows=\"4\"\r\n                  value={description}\r\n                  onChange={(event) => setDescription(event.target.value)} required />\r\n                <h5>required field</h5>\r\n              </div>\r\n              {active ? (\r\n                <h5 className=\"duplicate\">\"{name}\" already exists</h5>\r\n              ) : <h5>&nbsp;</h5>}\r\n              <div className=\"buttons\">\r\n                <button className=\"cancel-button\"\r\n                  onClick={() => {\r\n                    setActive(false);\r\n                    clearForm();\r\n                    setShowModal(false);\r\n                  }}>Cancel</button>\r\n                <button className=\"add-button\"\r\n                  disabled={checkDisabled()}>Add Activity!</button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Activities;","import { Card } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./routines.css\";\r\n\r\nconst Routines = ({routinesList, setRoutinesList}) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"routines-page\">\r\n            <h1>View Public Routines...</h1>\r\n            <br></br>\r\n            {routinesList.map((routine) => {\r\n                return (\r\n                    <Card className=\"routine-card\" key={routine.id}>\r\n                        <h2 className=\"routine-header\">{routine.creatorName}'s {routine.name}</h2>\r\n                        <p className=\"routine-goal\">Routine Goal: {routine.goal}</p>\r\n                        {routine.activities ? (\r\n                          routine.activities.map((activity) => {\r\n                            return <div key={activity.id}>\r\n                            <p className=\"activity-name\">Activity: {activity.name}</p>\r\n                            <p className=\"activity-description\">Description: {activity.description}</p>\r\n                            <p className=\"activity-duration\">Duration: {activity.duration}</p>\r\n                            <p className=\"activity-count\">Count: {activity.count}</p>\r\n                            </div>\r\n                        })\r\n                        ) : null }\r\n                        \r\n                        \r\n                    </Card>\r\n                );\r\n            })}\r\n            </div>\r\n            \r\n            \r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Routines;\r\n","import React, {useState} from \"react\";\r\nimport {hitAPI} from \"../api/index\";\r\n\r\nconst Modals = ({\r\n  ID,\r\n  setID,\r\n  routinesList,\r\n  setRoutinesList,\r\n  showModal,\r\n  setShowModal,\r\n  showDelete,\r\n  setShowDelete,\r\n  name,\r\n  goal,\r\n  setName,\r\n  setGoal,\r\n  myRoutines\r\n}) => {\r\n  const [err, setErr] = useState(false);\r\n\r\n  function checkDuplicate() {\r\n    let listLength;\r\n    let tempList;\r\n    if (ID) {\r\n      tempList = routinesList.filter(routine => routine.id !== ID);\r\n      listLength = tempList.length;\r\n    } else {\r\n      tempList = routinesList.slice();\r\n      listLength = tempList.length;\r\n    }\r\n    for (let i = 0; i < listLength; i++) {\r\n      if (name === tempList[i].name) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  function clearForm() {\r\n    setName('');\r\n    setGoal('');\r\n    setID(null);\r\n  };\r\n\r\n  function checkDisabled() {\r\n    if (name === '' || goal === '') {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  if (showModal) {\r\n    document.querySelector('body').style.overflow = 'hidden';\r\n  } else {\r\n    document.querySelector('body').style.overflow = 'visible';\r\n  };\r\n\r\n  return (\r\n    <>\r\n    {/* Modal to add or edit routine */}\r\n    {showModal ? (\r\n      <div className=\"modal\">\r\n        <div className=\"contents\">\r\n          {ID ? (\r\n            <label>Edit Routine</label>\r\n          ) : (\r\n            <label>Add A New Routine</label>\r\n          )}\r\n          <form className=\"new-form\" onSubmit={async (event) => {\r\n            event.preventDefault();\r\n\r\n            const data = {\r\n              name,\r\n              goal,\r\n              isPublic: true\r\n            };\r\n\r\n            if (checkDuplicate()) {\r\n              setErr(true);\r\n            } else {\r\n              if (ID) {\r\n                hitAPI(\"PATCH\", `/routines/${ID}`, data)\r\n                .then((data) => {\r\n                  setRoutinesList([...routinesList, data]);\r\n                })\r\n                .catch(console.error);\r\n              } else {\r\n                hitAPI(\"POST\", \"/routines\", data)\r\n                .then((data) => {\r\n                  setRoutinesList([...routinesList, data]);\r\n                })\r\n                .catch(console.error);\r\n              };\r\n              clearForm();\r\n              setShowModal(false);\r\n            }\r\n            }}\r\n          >\r\n            <div>\r\n              <input type=\"text\" placeholder=\"name of routine\"\r\n                value={name}\r\n                onChange={(event) => {\r\n                  setErr(false);\r\n                  setName(event.target.value);\r\n                }} required />\r\n              <h5>required field</h5>\r\n            </div>\r\n            <div>\r\n              <textarea placeholder=\"goal\" rows=\"4\"\r\n                value={goal}\r\n                onChange={(event) => setGoal(event.target.value)} required />\r\n              <h5>required field</h5>\r\n            </div>\r\n            {err ? (\r\n              <h5 className=\"duplicate\">\"{name}\" already exists as a routine.</h5>\r\n            ) : <h5>&nbsp;</h5>}\r\n            <div className=\"buttons\">\r\n              <button className=\"cancel-button\"\r\n                onClick={() => {\r\n                  setErr(false);\r\n                  clearForm();\r\n                  setShowModal(false);\r\n                }}>Cancel</button>\r\n              <button className=\"add-button\"\r\n                disabled={checkDisabled()}>{ID ? \"Edit\" : \"Add\"} Routine!</button>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    ) : null}\r\n    \r\n    {/*modal to confirm deletion of routine*/}\r\n    {showDelete ? (\r\n      <div className=\"modal delete-modal\">\r\n        <div className=\"confirm-delete\">\r\n          <p>Delete this routine?</p>\r\n          <button className=\"yes\"\r\n            onClick={() => {\r\n              for (let i = 0; i < myRoutines.length; i++) {\r\n                if (myRoutines[i].id === ID) {\r\n                  hitAPI(\"DELETE\", `/routines/${ID}`)\r\n                    .then(() => {\r\n                      setRoutinesList([routinesList.splice(i, 1)]);\r\n                    })\r\n                    .catch(console.error);\r\n                  \r\n                    break;\r\n                }\r\n              }\r\n              setShowDelete(false);\r\n              setID(null);\r\n            }}>Yes</button>\r\n          <button className=\"no\"\r\n            onClick={() => {\r\n              setShowDelete(false);\r\n            }}>No</button>\r\n        </div>\r\n      </div>\r\n    ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Modals;","import React from 'react'\r\nimport {hitAPI} from \"../api/index\";\r\n\r\nfunction AddActivities(props) {\r\n    const {activitiesList, \r\n            routineid, \r\n            setShowAdd, \r\n            updateActivities, \r\n            setUpdateActivities,\r\n            count,\r\n            setCount,\r\n            duration,\r\n            setDuration,\r\n            addActivityid,\r\n            setAddActivityid,\r\n            activityEdit,\r\n            setActivityEdit} = props;\r\n    \r\n    \r\n\r\n    return (\r\n    <form>\r\n        {activityEdit? \r\n        null\r\n        :\r\n        <select\r\n            onChange={(event)=> {\r\n                setAddActivityid(event.target.value)\r\n                }}>\r\n            {activitiesList.map((activity, indx) => {\r\n            return <option \r\n                    value={activity.id}\r\n                    valuename={activity.name}\r\n                    key={indx}\r\n                    >\r\n                    {activity.name}</option>\r\n            })}\r\n        </select>\r\n        }\r\n        <div className=\"count-duration\">\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Count\"\r\n                value={count}\r\n                onChange={(event)=> {\r\n                    setCount(event.target.value)\r\n                }}>\r\n            </input>\r\n            <input \r\n                type=\"text\" \r\n                placeholder=\"Duration\"\r\n                value={duration}\r\n                onChange={(event)=> {\r\n                    setDuration(event.target.value)\r\n                }}>\r\n            </input>\r\n        </div>\r\n        <button\r\n            onClick={(event)=> {\r\n                event.preventDefault();\r\n                (activityEdit)?\r\n                (hitAPI(\"PATCH\", `/routine_activities/${addActivityid}`, {count: count, duraction: duration})\r\n                .then(() => {\r\n                    setShowAdd(false)\r\n                    setActivityEdit(false)\r\n                    setUpdateActivities(!updateActivities)\r\n                    setAddActivityid('')\r\n                    setCount('')\r\n                    setDuration('')\r\n                }))\r\n                :\r\n                hitAPI(\"POST\", `/routines/${routineid}/activities`, {\r\n                    activityId: addActivityid,\r\n                    count: count, \r\n                    duration: duration})\r\n                .then(() => {\r\n                    setShowAdd(false)\r\n                    setUpdateActivities(!updateActivities)\r\n                });\r\n            }}>{activityEdit? \"EDIT\": \"ADD\"}</button>\r\n    </form>)\r\n}\r\n\r\nexport default AddActivities","import { Card } from \"@material-ui/core\";\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport React, {useState, useEffect} from \"react\";\r\nimport {getToken, hitAPI} from \"../api/index\";\r\nimport Modals from \"./RoutineModals\";\r\nimport \"./myRoutines.css\";\r\nimport AddActivities from \"./AddActivities\"\r\n\r\nconst MyRoutines = ({\r\n  setActive,\r\n  routinesList,\r\n  setRoutinesList,\r\n  username,\r\n  activitiesList,\r\n  updateActivities,\r\n  setUpdateActivities}) => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [myRoutines, setMyRoutines] = useState([])\r\n  const [name, setName] = useState('');\r\n  const [goal, setGoal] = useState('');\r\n  const [showBack, setShowBack] = useState(false);\r\n  const [showDelete, setShowDelete] = useState(false);\r\n  const [showAdd, setShowAdd] = useState(false);\r\n  const [ID, setID] = useState(null);\r\n  const [count, setCount] = useState('');\r\n  const [duration, setDuration] = useState('');\r\n  const [addActivityid, setAddActivityid] = useState('315');\r\n  const [activityEdit, setActivityEdit] = useState(false)\r\n  setActive('myroutines');\r\n\r\n  useEffect(() => {\r\n    hitAPI(\"GET\", `/users/${username}/routines`)\r\n      .then((data) => {\r\n        setMyRoutines(data.sort((a, b) => (a.name > b.name) ? 1 : -1));\r\n      })\r\n      .catch(console.error);\r\n  }, [routinesList, username]);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      <div className=\"header\">\r\n        <h1>My Routines</h1>\r\n        {getToken() ? (\r\n              <button className=\"modal-button\" onClick={() => {\r\n                setShowModal(true);\r\n              }}>New Routine</button>\r\n            ) : null}\r\n      </div>\r\n      <div className=\"list\">\r\n        {myRoutines.map((routine) => {\r\n          return (\r\n            <Card className=\"card myroutines\" key={routine.id}>\r\n              <div className=\"card-header\">\r\n                <h2 className=\"myroutine-name\">{routine.name} {((ID === routine.id) && showBack) ? \"Activities\" : null}</h2>\r\n              </div>\r\n              <div className=\"card-body\">\r\n              {ID === routine.id && showBack && showAdd? \r\n                <AddActivities \r\n                  activitiesList={activitiesList} \r\n                  routineid={routine.id} \r\n                  setShowAdd={setShowAdd} \r\n                  setUpdateActivities={setUpdateActivities} \r\n                  updateActivities={updateActivities}\r\n                  count={count}\r\n                  setCount={setCount}\r\n                  duration={duration}\r\n                  setDuration={setDuration}\r\n                  addActivityid={addActivityid}\r\n                  setAddActivityid={setAddActivityid}\r\n                  activityEdit={activityEdit}\r\n                  setActivityEdit={setActivityEdit}/> \r\n                  : null}\r\n                {ID === routine.id && showBack ? (\r\n                  routine.activities <1? <p>No activities, press \"Add\" to add activities to your routine.</p>\r\n                  :\r\n                  routine.activities.map((activity) => {\r\n                    \r\n                    return (\r\n                      <Accordion className=\"myroutine-activity\" key={activity.id}>\r\n                        <AccordionSummary\r\n                          expandIcon={<ExpandMoreIcon />}\r\n                          // aria-controls={`${activity.name}-content`}\r\n                          // id={`${activity.name}-header`}\r\n                        >\r\n                          <Typography className=\"myactivity-name\">{activity.name}</Typography>\r\n                          <Typography className=\"myactivity-count\">Reps: {activity.count}</Typography>\r\n                          <Typography className=\"myactivity-duration\">Duration: {activity.duration} minutes</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                          <Typography className=\"myactivity-goal\">{activity.description}</Typography>\r\n                          <DeleteIcon \r\n                            onClick={() => {\r\n                              \r\n                              hitAPI(\"DELETE\", `/routine_activities/${activity.routineActivityId}`)\r\n                                .then((data) => {\r\n                                  setUpdateActivities(!updateActivities)\r\n                                })\r\n                                .catch(console.error);\r\n                            }}/>\r\n                          <EditIcon \r\n                            onClick={() => {\r\n                              setShowAdd(true)\r\n                              setActivityEdit(true)\r\n                              setAddActivityid(activity.routineActivityId)\r\n                              setCount(activity.count)\r\n                              setDuration(activity.duration)\r\n                            }}/>\r\n                        </AccordionDetails>\r\n                      </Accordion>\r\n                    )\r\n                  })\r\n                  )\r\n                  : (\r\n                  <p className=\"myroutine-goal\">Goal: {routine.goal}</p>\r\n                  )\r\n                }\r\n              </div>\r\n              <div className=\"card-footer\">\r\n                <button className=\"flip\"\r\n                  onClick={() => {\r\n                    setShowBack(!showBack);\r\n                    setID(routine.id);\r\n                  }}>{((ID === routine.id) && showBack ? \"Goal\" : \"Activities\")}</button>\r\n                <button className=\"edit\"\r\n                  onClick={((ID === routine.id) && showBack) ? (\r\n                    () => {\r\n                      setID(routine.id);\r\n                      setShowAdd(!showAdd)\r\n\r\n                    }\r\n                    ) : (\r\n                    () => {\r\n                      setID(routine.id);\r\n                      setName(routine.name);\r\n                      setGoal(routine.goal);\r\n                      setShowModal(true);\r\n                    }\r\n                  )}>{((ID === routine.id) && showBack ? \"Add\" : \"Edit\")}</button>\r\n                <button className=\"delete\"\r\n                  onClick={() => {\r\n                    setID(routine.id)\r\n                    setShowDelete(true);\r\n                  }}>Delete</button>\r\n              </div>\r\n            </Card>\r\n          )\r\n        })}\r\n      </div>\r\n      <Modals\r\n        ID={ID}\r\n        setID={setID}\r\n        routinesList={routinesList}\r\n        setRoutinesList={setRoutinesList}\r\n        myRoutines={myRoutines}\r\n        showModal={showModal}\r\n        setShowModal={setShowModal}\r\n        showDelete={showDelete}\r\n        setShowDelete={setShowDelete}\r\n        name={name}\r\n        goal={goal}\r\n        setName={setName}\r\n        setGoal={setGoal} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyRoutines;","import React, { useState } from 'react'\r\nimport './Login.css'\r\nimport './activities_myRoutines.css'\r\n\r\nfunction Login(props){\r\n    const {loggedIn,\r\n        setLoggedIn,\r\n        setToken,\r\n        setUsername,\r\n        setShowModal,\r\n        setActive} = props;\r\n    \r\n    const [loginName, setLoginName] = useState('')\r\n    const [loginPassword, setLoginPassword] = useState('')\r\n    const [loginError, setLoginError] = useState('')\r\n\r\n    setActive('login')\r\n\r\n\r\n    return (\r\n      <>\r\n      {loggedIn ? null : (\r\n        <div className=\"login-modal\">\r\n          <div className=\"contents\">\r\n            <h2 className=\"title\">Login or Register</h2>\r\n            <form className=\"login-form\">\r\n              <div className=\"login-inputs\">\r\n                <input className=\"loginName\"\r\n                  type=\"text\" \r\n                  placeholder=\"loginName\" \r\n                  value={loginName}\r\n                  onChange={(event) => setLoginName(event.target.value)}>\r\n                </input>\r\n                <input className=\"loginPassword\"\r\n                  id=\"passwordInput\"\r\n                  type=\"password\"\r\n                  placeholder=\"loginPassword\" \r\n                  value={loginPassword}\r\n                  onChange={(event) => setLoginPassword(event.target.value)}>\r\n                </input>\r\n                {loginError?\r\n                  <h3 className=\"error\">{loginError}</h3> : null\r\n                }\r\n              </div>\r\n              <div className=\"buttons\">\r\n                <button\r\n                  onClick={(event) => {\r\n                      event.preventDefault()\r\n                      \r\n                      fetch('https://fitnesstrac-kr.herokuapp.com/api/users/login', {\r\n                        method: \"POST\",\r\n                        headers: {\r\n                          'Content-Type': 'application/json'},\r\n                        body: JSON.stringify({\r\n                          username: loginName,\r\n                          password: loginPassword\r\n                        })\r\n                      })\r\n                      .then(response => response.json())\r\n                      .then(result => {\r\n                        if (result.error) {\r\n                          setLoginError(result.error)\r\n                        }\r\n                        setToken(result.token, result.user.username)\r\n                        setLoggedIn(true)\r\n                        setUsername(result.user.username)\r\n                        setLoginName('')\r\n                        setLoginPassword('')\r\n                        setLoginError('')\r\n                      })\r\n                      .catch(error => console.log(error)); \r\n                  }}\r\n                >Login</button>\r\n                <button onClick={(event) => {\r\n                  event.preventDefault()\r\n                  \r\n                  fetch('https://fitnesstrac-kr.herokuapp.com/api/users/register', {\r\n                    method: \"POST\",\r\n                    headers: {\r\n                      'Content-Type': 'application/json'},\r\n                    body: JSON.stringify({\r\n                      username: loginName,\r\n                      password: loginPassword\r\n                    })\r\n                  })\r\n                  .then(response => response.json())\r\n                  .then(result => {\r\n                    if (result.error) {\r\n                      setLoginError(result.error)\r\n                    }\r\n                    setToken(result.token, result.user.username)\r\n                    setLoggedIn(true)\r\n                    setUsername(result.user.username)\r\n                    setShowModal(false)\r\n                    setLoginName('')\r\n                    setLoginPassword('')\r\n                    setLoginError('')\r\n                  })\r\n                  .catch(error => console.log(error))\r\n                  }}\r\n                >Register</button>\r\n              </div>    \r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Login","import React, {useState, useEffect} from  \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\r\nimport Header from './components/Header'\r\nimport Activities from \"./components/Activities\";\r\nimport Routines from './components/Routines';\r\nimport MyRoutines from './components/MyRoutines';\r\nimport Login from './components/Login';\r\nimport {hitAPI} from './api';\r\nimport \"./components/activities_myRoutines.css\"\r\n\r\n\r\nfunction App() {\r\n    const [routinesList, setRoutinesList] = useState([]);\r\n    const [activitiesList, setActivitiesList] = useState([]);\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [username, setUsername] = useState('');\r\n    const [active, setActive] = useState('login');\r\n    const [updateActivities, setUpdateActivities] = useState(false)\r\n    \r\n    useEffect(() => {\r\n      hitAPI(\"GET\", \"/routines\")\r\n          .then((data) => {\r\n              setRoutinesList(data);\r\n          })\r\n          .catch((error) => {\r\n              console.error(\"There was a problem getting your routines\", error);\r\n          })\r\n  }, [updateActivities]);\r\n\r\n    useEffect(() => {\r\n        hitAPI(\"GET\", \"/activities\")\r\n        .then((data) => {\r\n            setActivitiesList(data.sort((a, b) => (a.id < b.id) ? 1 : -1));\r\n        })\r\n        .catch(console.error);\r\n    }, []);\r\n\r\n    const getToken = () => {\r\n        if (localStorage.getItem('authfitness-token')) {\r\n            setLoggedIn(true)\r\n            setUsername(localStorage.getItem('username'))\r\n          return localStorage.getItem('authfitness-token')\r\n        } else {\r\n          localStorage.removeItem('authfitness-token')\r\n        }\r\n      }\r\n\r\n    const clearToken = () => {\r\n        localStorage.removeItem('authfitness-token');\r\n        localStorage.removeItem('username')\r\n      }\r\n      \r\n    const setToken = (token, username) => {\r\n        localStorage.setItem('authfitness-token', token);\r\n        localStorage.setItem('username', username)\r\n      }\r\n\r\n    \r\n    return (\r\n        <>\r\n            <Router>\r\n                <div className=\"app\">\r\n                    <Header \r\n                        loggedIn={loggedIn}\r\n                        setLoggedIn={setLoggedIn}\r\n                        getToken={getToken}\r\n                        clearToken={clearToken}\r\n                        username={username}\r\n                        active={active}\r\n                        setActive={setActive}/>\r\n                    <Switch>\r\n                        <Route path=\"/activities\">\r\n                            {/* activities page */}\r\n                            <Activities\r\n                              getToken={getToken}\r\n                              routinesList={routinesList}\r\n                              setRoutinesList={setRoutinesList}\r\n                              activitiesList={activitiesList} />\r\n                        </Route>\r\n                        <Route path=\"/routines\">\r\n                            {/* routines page */}\r\n                            <Routines\r\n                              routinesList={routinesList}\r\n                              setRoutinesList={setRoutinesList} />\r\n                        </Route>\r\n                        <Route path=\"/myroutines\">\r\n                            {/* myroutines page */}\r\n                            {loggedIn === false?\r\n                            <Redirect to=\"/\" />\r\n                            :\r\n                            <MyRoutines\r\n                              getToken={getToken} \r\n                              setActive={setActive}\r\n                              routinesList={routinesList}\r\n                              setRoutinesList={setRoutinesList}\r\n                              username={username} \r\n                              activitiesList={activitiesList}\r\n                              updateActivities={updateActivities}\r\n                              setUpdateActivities={setUpdateActivities}/>\r\n                            }\r\n                            \r\n                        </Route>\r\n                        <Route path=\"/\">\r\n                            {/* homepage */}\r\n                            {loggedIn?\r\n                            <Redirect to=\"/myroutines\" />\r\n                            :\r\n                            <Login \r\n                                loggedIn={loggedIn}\r\n                                setLoggedIn={setLoggedIn}\r\n                                clearToken={clearToken}\r\n                                setToken={setToken}\r\n                                setUsername={setUsername}\r\n                                setActive={setActive}\r\n                            />}\r\n                        </Route>\r\n                    </Switch>\r\n                </div>\r\n            </Router>\r\n        </>\r\n    )\r\n}\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.getElementById(`app`)\r\n);\r\n"],"sourceRoot":""}